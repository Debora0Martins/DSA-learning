class Solution {
    public int search(int[] arr, int target) {
        int peak = findPeakElement(arr);


        int first= binary(arr,target,0,peak);
        if(first==-1){
        first = binary(arr,target,peak+1,arr.length-1);

        }
        return first;
    }
    
     int findPeakElement(int[] arr) {
        int start=0;
        int end=arr.length-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(mid<end&&arr[mid]>arr[mid+1]){
                return mid;
            }
            if(mid>start&&arr[mid-1]>arr[mid]){
                return mid-1;
            }
            if(arr[start]>arr[mid]){
                end=mid-1;
            }else{
                start=mid+1;
            }
        }
        return -1;
        
        
    }   
    int binary(int[] arr,int tar,int s,int e){
        int start=s;
        int end=e;
        while(start<=end){
            int mid=(start+end)/2;
            if(arr[mid]==tar){
                return mid;

            }
            if(arr[mid]>tar){
                end=mid-1;
            }else if(arr[mid]<tar){
                start=mid+1;
            }
        }
        return -1;

    
}


}
